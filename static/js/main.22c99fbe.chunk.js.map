{"version":3,"sources":["Component/Kakaomap/Kakaomap.js","Component/Main.js","Component/Header.js","App.js","serviceWorker.js","index.js"],"names":["Kakaomap","props","useState","select","useEffect","console","log","mapscript","addEventHandle","searchPlaces","placesSearchCB","displayPlaces","addMarker","removeMarker","displayPlaceInfo","addCategoryClickEvent","onClickCategory","a","id","this","className","placeOverlay","setMap","document","getElementById","children","i","length","onclick","place","content","place_url","place_name","road_address_name","address_name","phone","contentNode","innerHTML","setPosition","kakao","maps","LatLng","y","x","map","btnGo","btnLink","addEventListener","location","href","window","Kakao","Link","sendDefault","objectType","title","description","imageUrl","link","mobileWebUrl","webUrl","social","likeCount","commentCount","sharedCount","buttons","markers","position","order","imageSize","Size","markerImage","MarkerImage","marker","Marker","image","push","places","event","addListener","data","status","pagination","services","Status","OK","ZERO_RESULT","ERROR","selected","ps","categorySearch","useMapBounds","target","type","callback","attachEvent","container","options","center","level","Map","CustomOverlay","zIndex","createElement","Places","preventMap","setContent","myPositionDisplayMarker","locPosition","message","iwContent","InfoWindow","removable","open","setCenter","navigator","geolocation","getCurrentPosition","lat","coords","latitude","lon","longitude","style","width","height","Main","onClick","Header","data-order","onSubmit","App","page","pageState","setSelected","onHeaderSubmit","Boolean","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.22c99fbe.chunk.js","sourcesContent":["/*global kakao */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport './../../css/Kakaomap.css';\r\n\r\nexport default function Kakaomap(props) {\r\n  const [ select, setSelect ] = useState({\r\n    select: ''\r\n  }); // useState 내부에 원래 state에 해당되는 데이터를 전달한다.\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect 실행\");\r\n    mapscript();\r\n  }, [props]);\r\n\r\n  const mapscript = async () => {\r\n    const container = document.getElementById(\"map\");\r\n    const options = {\r\n      center: new kakao.maps.LatLng(37.458895, 126.653758),\r\n      level: 5,\r\n    };\r\n    //map\r\n    const map = new kakao.maps.Map(container, options);\r\n\r\n    // 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀 오버레이\r\n    let placeOverlay = new kakao.maps.CustomOverlay({zIndex: 1}),\r\n        contentNode = document.createElement('div'),    // 커스텀 오버레이 컨텐츠 엘리먼트\r\n        markers = [],                                   // 마커를 담을 배열\r\n        currCategory = '';                              // 현재 선택된 카테고리\r\n\r\n\r\n    let ps = new kakao.maps.services.Places(map);   // 장소 검색 객체 생성\r\n\r\n    kakao.maps.event.addListener(map, 'idle', searchPlaces);  // 지도에 idle 이벤트 등록\r\n\r\n    contentNode.className = 'placeinfo_wrap';   // 커스텀 오버레이의 컨텐츠 노드에 css class 추가\r\n\r\n    // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\r\n    // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록\r\n    addEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\r\n    addEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap);\r\n\r\n    // 커스텀 오버레이 컨텐츠를 설정\r\n    placeOverlay.setContent(contentNode);\r\n\r\n    // 각 카테고리에 클릭 이벤트를 등록\r\n    addCategoryClickEvent();\r\n\r\n    // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\r\n    function addEventHandle(target, type, callback) {\r\n      if (target.addEventListener) {\r\n          target.addEventListener(type, callback);\r\n      } else {\r\n          target.attachEvent('on' + type, callback);\r\n      }\r\n    }\r\n\r\n    // 카테고리 검색을 요청하는 함수입니다\r\n    function searchPlaces() {\r\n      if (props.selected.selected === '') {\r\n          return;\r\n      }\r\n      \r\n      // 커스텀 오버레이를 숨깁니다 \r\n      placeOverlay.setMap(null);\r\n\r\n      // 지도에 표시되고 있는 마커를 제거합니다\r\n      removeMarker();\r\n      \r\n      ps.categorySearch(props.selected.selected, placesSearchCB, {useMapBounds:true}); \r\n    }\r\n\r\n    // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n    function placesSearchCB(data, status, pagination) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n\r\n          // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\r\n          displayPlaces(data);\r\n      } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n          // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n\r\n      } else if (status === kakao.maps.services.Status.ERROR) {\r\n          // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\r\n          \r\n      }\r\n    }\r\n\r\n    // 지도에 마커를 표출하는 함수입니다\r\n    function displayPlaces(places) {\r\n\r\n      // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\r\n      // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\r\n      // var order = document.getElementById(props.selected.selected).getAttribute('data-order');\r\n\r\n      for ( var i=0; i<places.length; i++ ) {\r\n\r\n              // 마커를 생성하고 지도에 표시합니다\r\n              var marker = addMarker(new kakao.maps.LatLng(places[i].y, places[i].x));\r\n\r\n              // 마커와 검색결과 항목을 클릭 했을 때\r\n              // 장소정보를 표출하도록 클릭 이벤트를 등록합니다\r\n              (function(marker, place) {\r\n                  kakao.maps.event.addListener(marker, 'click', function() {\r\n                      displayPlaceInfo(place);\r\n                  });\r\n              })(marker, places[i]);\r\n      }\r\n    }\r\n\r\n    // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n    function addMarker(position, order) {\r\n      var imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n          imageSize = new kakao.maps.Size(24, 35),  // 마커 이미지의 크기\r\n          // imgOptions =  {\r\n          //     spriteSize : new kakao.maps.Size(72, 208), // 스프라이트 이미지의 크기\r\n          //     // spriteOrigin : new kakao.maps.Point(46, (order*36)), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n          //     offset: new kakao.maps.Point(11, 28) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n          // },\r\n          markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize),\r\n              marker = new kakao.maps.Marker({\r\n              position: position, // 마커의 위치\r\n              image: markerImage \r\n          });\r\n\r\n      marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n      markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n\r\n      return marker;\r\n    }\r\n\r\n    // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n    function removeMarker() {\r\n      for ( var i = 0; i < markers.length; i++ ) {\r\n          markers[i].setMap(null);\r\n      }   \r\n      markers = [];\r\n    }\r\n\r\n    // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\r\n    function displayPlaceInfo (place) {\r\n      var content = '<div class=\"placeinfo\">' +\r\n                      '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';\r\n\r\n      if (place.road_address_name) {\r\n          content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\r\n                      '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\r\n      }  else {\r\n          content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\r\n      }                \r\n    \r\n      content += '    <span class=\"tel\">' + place.phone + '</span>' + \r\n                  '</div>' + \r\n                  '<div class=\"after\"></div>' + '<button id=\"goKakaomap\">도착지 설정</button>' + '<button id=\"sendLink\">링크 보내기</button>';\r\n\r\n      contentNode.innerHTML = content;\r\n      placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\r\n      placeOverlay.setMap(map);\r\n      let btnGo = document.getElementById('goKakaomap');\r\n      let btnLink = document.getElementById('sendLink');\r\n      btnGo.addEventListener('click', function() {\r\n        document.location.href=\"https://map.kakao.com/link/to/\" + place.id;\r\n      });\r\n      btnLink.addEventListener('click', function() {\r\n        window.Kakao.Link.sendDefault({\r\n          objectType: 'feed',\r\n          content: {\r\n            title: place.place_name,\r\n            description: place.road_address_name,\r\n            imageUrl:\r\n              'http://k.kakaocdn.net/dn/Q2iNx/btqgeRgV54P/VLdBs9cvyn8BJXB3o7N8UK/kakaolink40_original.png',\r\n            link: {\r\n              mobileWebUrl: place.place_url,\r\n              webUrl: place.place_url,\r\n            },\r\n          },\r\n          social: {\r\n            likeCount: 286,\r\n            commentCount: 45,\r\n            sharedCount: 845,\r\n          },\r\n          buttons: [\r\n            {\r\n              title: '웹으로 보기',\r\n              link: {\r\n                mobileWebUrl: place.place_url,\r\n                webUrl: place.place_url,\r\n              },\r\n            },\r\n            {\r\n              title: '앱으로 보기',\r\n              link: {\r\n                mobileWebUrl: place.place_url,\r\n                webUrl: place.place_url,\r\n              },\r\n            },\r\n          ],\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n    // 각 카테고리에 클릭 이벤트를 등록합니다\r\n    function addCategoryClickEvent() {\r\n      console.log(document.getElementById('category'));\r\n      var category = document.getElementById('category'),\r\n          children = category.children;\r\n\r\n      for (var i=0; i<children.length; i++) {\r\n          children[i].onclick = onClickCategory;\r\n      }\r\n    }\r\n\r\n    // 카테고리를 클릭했을 때 호출되는 함수입니다\r\n    function onClickCategory() {\r\n      var id = this.id,\r\n          className = this.className;\r\n\r\n      placeOverlay.setMap(null);\r\n\r\n      if (className === 'on') {\r\n          currCategory = '';\r\n          removeMarker();\r\n      } else {\r\n          currCategory = id;\r\n          searchPlaces();\r\n      }\r\n    }\r\n\r\n    //현재 내 위치를 마커로 표시해주는 함수\r\n    const myPositionDisplayMarker = (locPosition, message) => {\r\n      const marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: locPosition\r\n      });\r\n\r\n      const iwContent = message, // 인포윈도우에 표시할 내용\r\n      iwRemoveable = true;\r\n\r\n      // 인포윈도우를 생성\r\n      const infowindow = new kakao.maps.InfoWindow({\r\n          content : iwContent,\r\n          removable : iwRemoveable\r\n      });\r\n      \r\n      // 인포윈도우를 마커위에 표시\r\n      infowindow.open(map, marker);\r\n      \r\n      // 지도 중심좌표를 접속위치로 변경\r\n      map.setCenter(locPosition);\r\n    }\r\n\r\n    if (navigator.geolocation) {\r\n    \r\n      // GeoLocation을 이용해서 접속 위치를 얻어옵니다\r\n      navigator.geolocation.getCurrentPosition(function(position) {\r\n          \r\n      const lat = position.coords.latitude, // 위도\r\n            lon = position.coords.longitude; // 경도\r\n          \r\n      const locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\r\n            message = '<div style=\"padding:5px;\">Here is your position.</div>'; // 인포윈도우에 표시될 내용입니다\r\n          \r\n      // 마커와 인포윈도우를 표시합니다\r\n      myPositionDisplayMarker(locPosition, message);\r\n              \r\n      });\r\n      \r\n    } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\r\n      \r\n      const locPosition = new kakao.maps.LatLng(33.450701, 126.570667),    \r\n            message = 'Can not use User Position'\r\n          \r\n      myPositionDisplayMarker(locPosition, message);\r\n    }\r\n  };    //mapscript 함수 종료지점\r\n\r\n  return (\r\n    <div className=\"mapWrapper\">\r\n      <div id=\"map\" style={{ width: \"80vw\", height: \"74vh\" }}></div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './../css/Main.css';\r\nimport Kakaomap from './Kakaomap/Kakaomap.js';\r\nfunction Main(props) {\r\n    const test = () => {\r\n        console.log(props.selected);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Body\">\r\n                <h1 className=\"title\" onClick={test}>Kakao Map</h1>\r\n                <p className=\"info\">There may be some errors in the position.</p>\r\n                <Kakaomap selected={props.selected} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './../css/Header.css';\r\n\r\nfunction Header(props) {\r\n    const selectBank = () => {\r\n        props.onSubmit('BK9');\r\n    }\r\n\r\n    const selectConv = () => {\r\n        props.onSubmit('CS2');\r\n    }\r\n\r\n    const selectSubway = () => {\r\n        props.onSubmit('SW8');\r\n    }\r\n\r\n    const selectRoom = () => {\r\n        props.onSubmit('AD5');\r\n    }\r\n\r\n    const selectRest = () => {\r\n        props.onSubmit('FD6');\r\n    }\r\n\r\n    const selectCafe = () => {\r\n        props.onSubmit('CE7');\r\n    }\r\n    \r\n    const selectHospital = () => {\r\n        props.onSubmit('HP8');\r\n    }\r\n\r\n    const selectMart = () => {\r\n        props.onSubmit('MT1');\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <header>\r\n                <h2>Kakao Map Test Page</h2>\r\n                <nav>\r\n                    <ul className=\"myMenu\">\r\n                        <li className=\"menu1 topmenu\">Choose Category</li>\r\n                        <li className=\"menu2 topmenu\">List\r\n                            <ul id=\"category\" className=\"menu2_s submenu\">\r\n                                <li id=\"BK9\" data-order=\"0\" onClick={selectBank}>BANK</li>\r\n                                <li id=\"CS2\" data-order=\"5\"onClick={selectConv}>CONVENIENCE</li>\r\n                                <li id=\"SW8\" data-order=\"9\"onClick={selectSubway}>SUBWAY</li>\r\n                                <li id=\"AD5\" data-order=\"3\"onClick={selectRoom}>ROOMS</li>\r\n                                <li id=\"FD6\" data-order=\"4\"onClick={selectRest}>RESTAURANT</li>\r\n                                <li id=\"CE7\" data-order=\"4\"onClick={selectCafe}>CAFE</li>\r\n                                <li id=\"HP8\" data-order=\"2\"onClick={selectHospital}>HOSPITAL</li>\r\n                                <li id=\"MT1\" data-order=\"2\"onClick={selectMart}>MART</li>\r\n                            </ul>\r\n                        </li>\r\n                        <li className=\"menu3 topmenu\">Infomation</li>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <hr /> <br />\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, {useState } from 'react';\nimport './App.css';\nimport Main from './Component/Main.js'\nimport Header from './Component/Header';\n\nfunction App() {\n  const [ pageState, setPageState ] = useState({\n    page: 'Main'\n  }); // useState 내부에 원래 state에 해당되는 데이터를 전달한다.\n\n  const [ selected, setSelected ] = useState({\n    selected: ''\n  })\n\n  const onHeaderSubmit = async (select) => {\n    await setSelected({\n      selected: select\n    });\n  }\n\n  return (\n    <>\n      <div>\n        <Header onSubmit={onHeaderSubmit} />\n      </div>\n      <div className=\"bodyTest\">\n        {pageState.page === 'Main' && <Main selected={selected} /> }\n        {pageState.page === 'Test' && <h1>Test</h1> }\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}